generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id          Int      @id(map: "PK_9c4e4a89e3674fc9f382d733f03") @default(autoincrement())
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  name        String   @db.VarChar
  description String?  @db.VarChar
  companyId   Int?
  company     company? @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_38f0b4d3cd4cabf4bb582edb920")
  food        food[]
}

model company {
  id          Int        @id(map: "PK_056f7854a7afdba7cbd6d45fc20") @default(autoincrement())
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  name        String     @db.VarChar
  address     String     @db.VarChar
  phone       String     @db.VarChar
  image_url   String?    @db.VarChar
  description String?    @db.VarChar
  ownerId     Int?
  category    category[]
  user        user?      @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ee87438803acb531639e8284be0")
  employee    employee[]
  food        food[]
  table       table[]
}

model default_entity {
  id         Int      @id(map: "PK_5dba31df6db0ff9a0696ecd61d5") @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model employee {
  id         Int      @id(map: "PK_3c2bc72f03fd5abbbc5ac169498") @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  username   String   @unique(map: "UQ_389fe2fe09430efb8eabc4e1b6e") @db.VarChar
  image_url  String?  @db.VarChar
  password   String   @db.VarChar
  companyId  Int?
  role       String   @default("regular") @db.VarChar
  first_name String   @db.VarChar
  last_name  String   @db.VarChar
  company    company? @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_26c3d513e0832e5abbbdd3d2a88")
}

model food {
  id          Int          @id(map: "PK_26d12de4b6576ff08d30c281837") @default(autoincrement())
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  name        String       @db.VarChar
  price       Float        @default(0)
  daily       Boolean      @default(false)
  description String?      @db.VarChar
  companyId   Int?
  categoryId  Int?
  company     company?     @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_3e9a5dba0b0d69bb06564c60aa5")
  category    category?    @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f08c602e9e888ed83fb8be5c3d2")
  order_item  order_item[]
}

model order_item {
  id         Int      @id(map: "PK_d01158fe15b1ead5c26fd7f4e90") @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  amount     Int
  foodId     Int?
  tableId    Int?
  table      table?   @relation(fields: [tableId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e6c773fa733a72af2ed8887b6e1")
  food       food?    @relation(fields: [foodId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_eefd7c5ad8708989375a9db7b5e")
}

model table {
  id          Int          @id(map: "PK_28914b55c485fc2d7a101b1b2a4") @default(autoincrement())
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  name        String       @db.VarChar
  total       Float        @default(0)
  description String?      @db.VarChar
  companyId   Int?
  order_item  order_item[]
  company     company?     @relation(fields: [companyId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_e00fef47626ba6b2488fc03f64a")
}

model user {
  id         Int       @id(map: "PK_cace4a159ff9f2512dd42373760") @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  first_name String    @db.VarChar
  last_name  String    @db.VarChar
  phone      String    @unique(map: "UQ_8e1f623798118e629b46a9e6299") @db.VarChar
  email      String    @unique(map: "UQ_e12875dfb3b1d92d7d7c5377e22") @db.VarChar
  password   String    @db.VarChar
  verified   Boolean   @default(false)
  mfa        String?   @db.VarChar
  subs_type  Int       @default(0)
  company    company[]
}
